// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CriteriaSelect /> CriteriaSelect should have styles 1`] = `
.c0 {
  margin-top: 30px;
  font-weight: bold;
}

<div
  className="c0"
/>
`;

exports[`<CriteriaSelect /> CriteriaSelect should have styles 2`] = `
.c0 {
  border: solid 1px;
  border-radius: 0.3em;
}

<div
  className="c0"
/>
`;

exports[`<CriteriaSelect /> CriteriaSelect should render self and other imports 1`] = `
.c0 {
  margin-top: 30px;
  font-weight: bold;
}

.c1 {
  border: solid 1px;
  border-radius: 0.3em;
}

<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(CriteriaSelect)>
    <CriteriaSelect
      criteriaValue="0"
      setCriteriaValue={[Function]}
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
             margin-top: 30px;
             font-weight: bold;
    ",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <section
              className="criteria-select"
            >
              <div
                className="form-group"
              >
                <label>
                  Criteria select
                </label>
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
             border: solid 1px;
             border-radius: 0.3em;
    ",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <select
                        className="form-control"
                        onChange={[Function]}
                      >
                        <option
                          key="0"
                          value="0"
                        >
                          Book Name
                        </option>
                        <option
                          key="1"
                          value="1"
                        >
                          Book Genre
                        </option>
                        <option
                          key="2"
                          value="2"
                        >
                          Book Author
                        </option>
                      </select>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </section>
          </div>
        </StyledComponent>
      </styled.div>
    </CriteriaSelect>
  </Connect(CriteriaSelect)>
</Provider>
`;
