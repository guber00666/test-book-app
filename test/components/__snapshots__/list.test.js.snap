// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<List /> List should have styles 1`] = `
.c1 {
  width: 200px;
  height: 200px;
  display: inline-block;
  overflow: hidden;
  background: #ffffff;
  margin-left: 26em;
}

.c2 {
  width: 100%;
  height: 100%;
  position: relative;
  -webkit-transform: translateZ(0) scale(1);
  -ms-transform: translateZ(0) scale(1);
  transform: translateZ(0) scale(1);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c3 {
  position: absolute;
  width: 28px;
  box-sizing: content-box;
  left: 36px;
  background: #353535;
  -webkit-animation: cDTAEc 1s cubic-bezier(0,0.5,0.5,1) infinite;
  animation: cDTAEc 1s cubic-bezier(0,0.5,0.5,1) infinite;
  -webkit-animation-delay: -0.2s;
  animation-delay: -0.2s;
}

.c4 {
  position: absolute;
  width: 28px;
  box-sizing: content-box;
  left: 86px;
  background: #666666;
  -webkit-animation: fOLAFE 1s cubic-bezier(0,0.5,0.5,1) infinite;
  animation: fOLAFE 1s cubic-bezier(0,0.5,0.5,1) infinite;
  -webkit-animation-delay: -0.1s;
  animation-delay: -0.1s;
}

.c5 {
  position: absolute;
  width: 28px;
  box-sizing: content-box;
  left: 136px;
  background: #9b9b9b;
  -webkit-animation: fEBSmt 1s cubic-bezier(0,0.5,0.5,1) infinite;
  animation: fEBSmt 1s cubic-bezier(0,0.5,0.5,1) infinite;
  -webkit-animation-delay: initial;
  animation-delay: initial;
}

.c0 {
  margin-top: 30px;
  border: solid 1px;
  border-radius: 0.3em;
}

.c6 {
  margin-top: 30px;
  margin-bottom: 30px;
  float: right;
}

<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(List)>
    <List
      books={Array []}
      criteriaValue="0"
      fetchData={[Function]}
      filterValue=""
      hasErrored={false}
      isLoading={true}
      paginatorValue={1}
      setPaginatorValue={[Function]}
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-EHOje",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
              margin-top: 30px;
              border: solid 1px;
              border-radius: 0.3em;
        ",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-EHOje",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <div
              className="list"
            >
              <Spinner>
                <div
                  className="spinner-container"
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "c1",
                            "rules": Array [
                              "
             width: 200px;
             height: 200px;
             display: inline-block;
             overflow: hidden;
             background: #ffffff;
             margin-left: 26em;
        ",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c1"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "
             width: 100%;
             height: 100%;
             position: relative;
             transform: translateZ(0) scale(1);
             backface-visibility: hidden;
             transform-origin: 0 0;
    ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c2"
                            >
                              <div
                                className="spinner-pulse"
                              >
                                <div
                                  className="spinner-elements"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htpNat",
                                            "isStatic": false,
                                            "lastClassName": "c3",
                                            "rules": Array [
                                              "
             position: absolute; 
             width: 28px;
             box-sizing: content-box;
             left: 36px;
             background: #353535;
             animation: ",
                                              Keyframes {
                                                "id": "sc-keyframes-cDTAEc",
                                                "inject": [Function],
                                                "name": "cDTAEc",
                                                "rules": Array [
                                                  "@-webkit-keyframes cDTAEc{0%{top:39.199999999999996px;height:121.60000000000001px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                  "@keyframes cDTAEc{0%{top:39.199999999999996px;height:121.60000000000001px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                ],
                                                "toString": [Function],
                                              },
                                              " 1s cubic-bezier(0,0.5,0.5,1) infinite;
             animation-delay: -0.2s
    ",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htpNat",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c3"
                                      >
                                        <div
                                          className="spinner-element-1"
                                        />
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bxivhb",
                                            "isStatic": false,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "
             position: absolute; 
             width: 28px;
             box-sizing: content-box;
             left: 86px;
             background: #666666;
             animation: ",
                                              Keyframes {
                                                "id": "sc-keyframes-fOLAFE",
                                                "inject": [Function],
                                                "name": "fOLAFE",
                                                "rules": Array [
                                                  "@-webkit-keyframes fOLAFE{0%{top:44.89999999999999px;height:110.20000000000002px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                  "@keyframes fOLAFE{0%{top:44.89999999999999px;height:110.20000000000002px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                ],
                                                "toString": [Function],
                                              },
                                              " 1s cubic-bezier(0,0.5,0.5,1) infinite;
             animation-delay: -0.1s
    ",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bxivhb",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c4"
                                      >
                                        <div
                                          className="spinner-element-2"
                                        />
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "
             position: absolute; 
             width: 28px;
             box-sizing: content-box;
             left: 136px;
             background: #9b9b9b;
             animation: ",
                                              Keyframes {
                                                "id": "sc-keyframes-fEBSmt",
                                                "inject": [Function],
                                                "name": "fEBSmt",
                                                "rules": Array [
                                                  "@-webkit-keyframes fEBSmt{0%{top:50.6px;height:98.8px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                  "@keyframes fEBSmt{0%{top:50.6px;height:98.8px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                ],
                                                "toString": [Function],
                                              },
                                              " 1s cubic-bezier(0,0.5,0.5,1) infinite;
             animation-delay: initial;
    ",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c5"
                                      >
                                        <div
                                          className="spinner-element-3"
                                        />
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </div>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </Spinner>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
              margin-top: 30px;
              margin-bottom: 30px;
              float: right;
        ",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6"
                  >
                    <div
                      className="pagination-container"
                    />
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </div>
        </StyledComponent>
      </styled.div>
    </List>
  </Connect(List)>
</Provider>
`;

exports[`<List /> should be render self and other import 1`] = `
.c1 {
  width: 200px;
  height: 200px;
  display: inline-block;
  overflow: hidden;
  background: #ffffff;
  margin-left: 26em;
}

.c2 {
  width: 100%;
  height: 100%;
  position: relative;
  -webkit-transform: translateZ(0) scale(1);
  -ms-transform: translateZ(0) scale(1);
  transform: translateZ(0) scale(1);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c3 {
  position: absolute;
  width: 28px;
  box-sizing: content-box;
  left: 36px;
  background: #353535;
  -webkit-animation: cDTAEc 1s cubic-bezier(0,0.5,0.5,1) infinite;
  animation: cDTAEc 1s cubic-bezier(0,0.5,0.5,1) infinite;
  -webkit-animation-delay: -0.2s;
  animation-delay: -0.2s;
}

.c4 {
  position: absolute;
  width: 28px;
  box-sizing: content-box;
  left: 86px;
  background: #666666;
  -webkit-animation: fOLAFE 1s cubic-bezier(0,0.5,0.5,1) infinite;
  animation: fOLAFE 1s cubic-bezier(0,0.5,0.5,1) infinite;
  -webkit-animation-delay: -0.1s;
  animation-delay: -0.1s;
}

.c5 {
  position: absolute;
  width: 28px;
  box-sizing: content-box;
  left: 136px;
  background: #9b9b9b;
  -webkit-animation: fEBSmt 1s cubic-bezier(0,0.5,0.5,1) infinite;
  animation: fEBSmt 1s cubic-bezier(0,0.5,0.5,1) infinite;
  -webkit-animation-delay: initial;
  animation-delay: initial;
}

.c0 {
  margin-top: 30px;
  border: solid 1px;
  border-radius: 0.3em;
}

.c6 {
  margin-top: 30px;
  margin-bottom: 30px;
  float: right;
}

<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(List)>
    <List
      books={Array []}
      criteriaValue="0"
      fetchData={[Function]}
      filterValue=""
      hasErrored={false}
      isLoading={true}
      paginatorValue={1}
      setPaginatorValue={[Function]}
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-EHOje",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
              margin-top: 30px;
              border: solid 1px;
              border-radius: 0.3em;
        ",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-EHOje",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0"
          >
            <div
              className="list"
            >
              <Spinner>
                <div
                  className="spinner-container"
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "c1",
                            "rules": Array [
                              "
             width: 200px;
             height: 200px;
             display: inline-block;
             overflow: hidden;
             background: #ffffff;
             margin-left: 26em;
        ",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c1"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": false,
                                  "lastClassName": "c2",
                                  "rules": Array [
                                    "
             width: 100%;
             height: 100%;
             position: relative;
             transform: translateZ(0) scale(1);
             backface-visibility: hidden;
             transform-origin: 0 0;
    ",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c2"
                            >
                              <div
                                className="spinner-pulse"
                              >
                                <div
                                  className="spinner-elements"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htpNat",
                                            "isStatic": false,
                                            "lastClassName": "c3",
                                            "rules": Array [
                                              "
             position: absolute; 
             width: 28px;
             box-sizing: content-box;
             left: 36px;
             background: #353535;
             animation: ",
                                              Keyframes {
                                                "id": "sc-keyframes-cDTAEc",
                                                "inject": [Function],
                                                "name": "cDTAEc",
                                                "rules": Array [
                                                  "@-webkit-keyframes cDTAEc{0%{top:39.199999999999996px;height:121.60000000000001px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                  "@keyframes cDTAEc{0%{top:39.199999999999996px;height:121.60000000000001px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                ],
                                                "toString": [Function],
                                              },
                                              " 1s cubic-bezier(0,0.5,0.5,1) infinite;
             animation-delay: -0.2s
    ",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htpNat",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c3"
                                      >
                                        <div
                                          className="spinner-element-1"
                                        />
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bxivhb",
                                            "isStatic": false,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "
             position: absolute; 
             width: 28px;
             box-sizing: content-box;
             left: 86px;
             background: #666666;
             animation: ",
                                              Keyframes {
                                                "id": "sc-keyframes-fOLAFE",
                                                "inject": [Function],
                                                "name": "fOLAFE",
                                                "rules": Array [
                                                  "@-webkit-keyframes fOLAFE{0%{top:44.89999999999999px;height:110.20000000000002px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                  "@keyframes fOLAFE{0%{top:44.89999999999999px;height:110.20000000000002px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                ],
                                                "toString": [Function],
                                              },
                                              " 1s cubic-bezier(0,0.5,0.5,1) infinite;
             animation-delay: -0.1s
    ",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bxivhb",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c4"
                                      >
                                        <div
                                          className="spinner-element-2"
                                        />
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "
             position: absolute; 
             width: 28px;
             box-sizing: content-box;
             left: 136px;
             background: #9b9b9b;
             animation: ",
                                              Keyframes {
                                                "id": "sc-keyframes-fEBSmt",
                                                "inject": [Function],
                                                "name": "fEBSmt",
                                                "rules": Array [
                                                  "@-webkit-keyframes fEBSmt{0%{top:50.6px;height:98.8px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                  "@keyframes fEBSmt{0%{top:50.6px;height:98.8px;}50%{top:62px;height:76px;}100%{top:62px;height:76px;}}",
                                                ],
                                                "toString": [Function],
                                              },
                                              " 1s cubic-bezier(0,0.5,0.5,1) infinite;
             animation-delay: initial;
    ",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c5"
                                      >
                                        <div
                                          className="spinner-element-3"
                                        />
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </div>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </Spinner>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bZQynM",
                        "isStatic": false,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
              margin-top: 30px;
              margin-bottom: 30px;
              float: right;
        ",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bZQynM",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c6"
                  >
                    <div
                      className="pagination-container"
                    />
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </div>
        </StyledComponent>
      </styled.div>
    </List>
  </Connect(List)>
</Provider>
`;
